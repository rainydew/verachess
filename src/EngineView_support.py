#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.20
#  in conjunction with Tcl version 8.6
#    Nov 25, 2019 11:32:04 PM CST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global WhiteEngineChoosen
    WhiteEngineChoosen = tk.StringVar()
    global BlackEngineChoosen
    BlackEngineChoosen = tk.StringVar()
    global ListSelect
    ListSelect = tk.StringVar(value=" ".join(map(str, range(100))))
    global EngCountryVar
    EngCountryVar = tk.StringVar()
    global EngNameVar
    EngNameVar = tk.StringVar()
    global EngCommandVar
    EngCommandVar = tk.StringVar()
    global EngEndingVar
    EngEndingVar = tk.StringVar()
    global EngPriorityVar
    EngPriorityVar = tk.StringVar()
    global UseHash
    UseHash = tk.StringVar()
    global CHashVar
    CHashVar = tk.StringVar()
    global UseCpu
    UseCpu = tk.StringVar()
    global CCpuVar
    CCpuVar = tk.StringVar()
    global WatchTemp
    WatchTemp = tk.StringVar()
    global CpuTempVar
    CpuTempVar = tk.StringVar()
    global WatchMem
    WatchMem = tk.StringVar()
    global MemLimitVar
    MemLimitVar = tk.StringVar()
    global WatchMemLeak
    WatchMemLeak = tk.StringVar()
    global UseWb2Uci
    UseWb2Uci = tk.StringVar()

def c_close():
    print('EngineView_support.c_close')
    sys.stdout.flush()

def c_copy():
    print('EngineView_support.c_copy')
    sys.stdout.flush()

def configure():
    print('EngineView_support.configure')
    sys.stdout.flush()

def delete():
    print('EngineView_support.delete')
    sys.stdout.flush()

def new():
    print('EngineView_support.new')
    sys.stdout.flush()

def stash():
    print('EngineView_support.stash')
    sys.stdout.flush()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import EngineView
    EngineView.vp_start_gui()




