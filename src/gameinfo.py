#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.20
#  in conjunction with Tcl version 8.6
#    Nov 09, 2019 03:15:15 AM CST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True

import gameinfo_support
from consts import Color, Role, Winner, Termination
from tooltip import ToolTip


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    gameinfo_support.set_Tk_var()
    top = Toplevel1(root)
    gameinfo_support.init(root, top)
    root.mainloop()
    print(top.Result)


w = None


def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel(root)
    gameinfo_support.set_Tk_var()
    top = Toplevel1(w)
    gameinfo_support.init(w, top, *args, **kwargs)
    return (w, top)


def destroy_Toplevel1():
    global w
    w.destroy()
    w = None


class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'

        top.geometry("634x487+474+328")
        top.title("棋局信息")
        top.configure(background="#d9d9d9")

        self.Label1 = tk.Label(top)
        self.Label1.place(x=20, y=20, height=26)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(text='''白方''')

        self.WhitePlayer = tk.Entry(top)
        self.WhitePlayer.place(x=90, y=20, height=31, width=144)
        self.WhitePlayer.configure(textvariable=gameinfo_support.WPlayer)

        self.Label1_1 = tk.Label(top)
        self.Label1_1.place(x=20, y=100, height=26)
        self.Label1_1.configure(background="#d9d9d9")
        self.Label1_1.configure(text='''黑方''')

        self.BlackPlayer = tk.Entry(top)
        self.BlackPlayer.place(x=90, y=100, height=31, width=144)
        self.BlackPlayer.configure(textvariable=gameinfo_support.BPlayer)

        self.Label1_3 = tk.Label(top)
        self.Label1_3.place(x=280, y=20, height=26)
        self.Label1_3.configure(background="#d9d9d9")
        self.Label1_3.configure(text='''等级分''')

        self.Label1_4 = tk.Label(top)
        self.Label1_4.place(x=280, y=100, height=26)
        self.Label1_4.configure(background="#d9d9d9")
        self.Label1_4.configure(text='''等级分''')

        self.WhiteElo = tk.Entry(top)
        self.WhiteElo.place(x=360, y=20, height=31, width=94)
        self.WhiteElo.configure(textvariable=gameinfo_support.WElo)

        self.BlackElo = tk.Entry(top)
        self.BlackElo.place(x=360, y=100, height=31, width=94)
        self.BlackElo.configure(textvariable=gameinfo_support.BElo)

        self.WHuman = tk.Radiobutton(top)
        self.WHuman.place(x=50, y=60, height=30)
        self.WHuman.configure(background="#d9d9d9")
        self.WHuman.configure(text='''人类''')
        self.WHuman.configure(value=Role.human)
        self.WHuman.configure(variable=gameinfo_support.WType)

        self.WComputer = tk.Radiobutton(top)
        self.WComputer.place(x=190, y=60, height=30)
        self.WComputer.configure(background="#d9d9d9")
        self.WComputer.configure(text='''引擎''')
        self.WComputer.configure(value=Role.computer)
        self.WComputer.configure(variable=gameinfo_support.WType)

        self.WRemote = tk.Radiobutton(top)
        self.WRemote.place(x=350, y=60, height=30)
        self.WRemote.configure(background="#d9d9d9")
        self.WRemote.configure(text='''联机棋手''')
        self.WRemote.configure(value=Role.remote)
        self.WRemote.configure(variable=gameinfo_support.WType)

        self.BHuman = tk.Radiobutton(top)
        self.BHuman.place(x=50, y=140, height=30)
        self.BHuman.configure(background="#d9d9d9")
        self.BHuman.configure(text='''人类''')
        self.BHuman.configure(value=Role.human)
        self.BHuman.configure(variable=gameinfo_support.BType)

        self.BComputer = tk.Radiobutton(top)
        self.BComputer.place(x=190, y=140, height=30)
        self.BComputer.configure(background="#d9d9d9")
        self.BComputer.configure(text='''引擎''')
        self.BComputer.configure(value=Role.computer)
        self.BComputer.configure(variable=gameinfo_support.BType)

        self.BRemote = tk.Radiobutton(top)
        self.BRemote.place(x=350, y=140, height=30)
        self.BRemote.configure(background="#d9d9d9")
        self.BRemote.configure(text='''联机棋手''')
        self.BRemote.configure(value=Role.remote)
        self.BRemote.configure(variable=gameinfo_support.BType)

        self.Label1_11 = tk.Label(top)
        self.Label1_11.place(x=20, y=180, height=26)
        self.Label1_11.configure(background="#d9d9d9")
        self.Label1_11.configure(text='''赛事''')

        self.Event = tk.Entry(top)
        self.Event.place(x=90, y=180, height=31, width=364)
        self.Event.configure(textvariable=gameinfo_support.Event)

        self.Label1_12 = tk.Label(top)
        self.Label1_12.place(x=20, y=220, height=26)
        self.Label1_12.configure(background="#d9d9d9")
        self.Label1_12.configure(text='''地点''')

        self.Site = tk.Entry(top)
        self.Site.place(x=90, y=220, height=31, width=364)
        self.Site.configure(textvariable=gameinfo_support.Site)

        self.Label1_13 = tk.Label(top)
        self.Label1_13.place(x=20, y=260, height=26)
        self.Label1_13.configure(background="#d9d9d9")
        self.Label1_13.configure(text='''轮次''')

        self.Round = tk.Entry(top)
        self.Round.place(x=90, y=260, height=31, width=94)
        self.Round.configure(textvariable=gameinfo_support.Round)

        self.Label1_14 = tk.Label(top)
        self.Label1_14.place(x=200, y=260, height=26)
        self.Label1_14.configure(background="#d9d9d9")
        self.Label1_14.configure(text='''结果''')

        self.WWin = tk.Radiobutton(top)
        self.WWin.place(x=260, y=260, height=26)
        self.WWin.configure(background="#d9d9d9")
        self.WWin.configure(text='''1-0''')
        self.WWin.configure(value=Winner.white)
        self.WWin.configure(variable=gameinfo_support.Result)

        self.WDraw = tk.Radiobutton(top)
        self.WDraw.place(x=320, y=260, height=26)
        self.WDraw.configure(background="#d9d9d9")
        self.WDraw.configure(text='''1/2''')
        self.WDraw.configure(value=Winner.draw)
        self.WDraw.configure(variable=gameinfo_support.Result)

        self.WLose = tk.Radiobutton(top)
        self.WLose.place(x=380, y=260, height=26)
        self.WLose.configure(background="#d9d9d9")
        self.WLose.configure(text='''0-1''')
        self.WLose.configure(value=Winner.black)
        self.WLose.configure(variable=gameinfo_support.Result)

        self.WUnknown = tk.Radiobutton(top)
        self.WUnknown.place(x=440, y=260, height=26)
        self.WUnknown.configure(background="#d9d9d9")
        self.WUnknown.configure(text='''*''')
        self.WUnknown.configure(value=Winner.unknown)
        self.WUnknown.configure(variable=gameinfo_support.Result)

        self.Label1_12 = tk.Label(top)
        self.Label1_12.place(x=20, y=300, height=26)
        self.Label1_12.configure(background="#d9d9d9")
        self.Label1_12.configure(text='''比赛日期''')

        self.Date = tk.Entry(top)
        self.Date.place(x=90, y=300, height=31, width=144)
        self.Date.configure(textvariable=gameinfo_support.Date)

        self.Label1_5 = tk.Label(top)
        self.Label1_5.place(x=280, y=300, height=26)
        self.Label1_5.configure(background="#d9d9d9")
        self.Label1_5.configure(text='''比赛时间''')

        self.MatchTime = tk.Entry(top)
        self.MatchTime.place(x=360, y=300, height=31, width=94)
        self.MatchTime.configure(textvariable=gameinfo_support.MTime)

        self.Label1_7 = tk.Label(top)
        self.Label1_7.place(x=20, y=340, height=26)
        self.Label1_7.configure(background="#d9d9d9")
        self.Label1_7.configure(foreground=Color.blue)
        self.Label1_7.configure(text='''棋局时限''')
        ToolTip(self.Label1_7, "暂只支持费舍尔棋局时限，无限时请都填0。修改该时限只会影响记谱，不会影响当前棋局的时限"
                               "设置。当棋钟被更新时，该时限将被桌上的棋钟同步。")

        self.TCMin = tk.Entry(top)
        self.TCMin.place(x=140, y=340, height=31, width=94)  # place(relx=0.221, rely=0.698,height=31, relwidth=0.148)
        self.TCMin.configure(textvariable=gameinfo_support.TCMin)

        self.Label1_6 = tk.Label(top)
        self.Label1_6.place(x=240, y=340, height=26)
        self.Label1_6.configure(background="#d9d9d9")
        self.Label1_6.configure(text='''分/盘 + ''')

        self.TCSec = tk.Entry(top)
        self.TCSec.place(x=310, y=340, height=31, width=94)
        self.TCSec.configure(textvariable=gameinfo_support.TCSec)

        self.Label1_7 = tk.Label(top)
        self.Label1_7.place(x=410, y=340, height=26)
        self.Label1_7.configure(background="#d9d9d9")
        self.Label1_7.configure(text='''秒/步''')

        self.Label1_8 = tk.Label(top)
        self.Label1_8.place(x=20, y=380, height=26)
        self.Label1_8.configure(background="#d9d9d9")
        self.Label1_8.configure(text='''结束类型''')

        self.Termination = ttk.Combobox(top, values=Termination.all_type)
        self.Termination.place(x=140, y=380, height=29, width=94)
        self.Termination.configure(textvariable=gameinfo_support.Termination)

        self.Label1_9 = tk.Label(top)
        self.Label1_9.place(x=240, y=380, height=26)
        self.Label1_9.configure(background="#d9d9d9")
        self.Label1_9.configure(text='''详细信息''')

        self.TDetail = tk.Entry(top)
        self.TDetail.place(x=310, y=380, height=31, width=144)
        self.TDetail.configure(textvariable=gameinfo_support.TDetail)

        self.TSeparator1 = ttk.Separator(top)
        self.TSeparator1.place(x=490, y=20, height=400)
        self.TSeparator1.configure(orient="vertical")

        self.Label1_8 = tk.Label(top)
        self.Label1_8.place(x=510, y=20, height=26)
        self.Label1_8.configure(background="#d9d9d9")
        self.Label1_8.configure(text='''棋谱附加信息''')

        self.ScoreSaving = tk.Checkbutton(top)
        self.ScoreSaving.place(x=510, y=60, height=31)
        self.ScoreSaving.configure(background="#d9d9d9")
        self.ScoreSaving.configure(text='''局面估值''')
        self.ScoreSaving.configure(variable=gameinfo_support.SScore)

        self.DepthSaving = tk.Checkbutton(top)
        self.DepthSaving.place(x=510, y=100, height=31)
        self.DepthSaving.configure(background="#d9d9d9")
        self.DepthSaving.configure(text='''搜索深度''')
        self.DepthSaving.configure(variable=gameinfo_support.SDepth)

        self.TimeSaving = tk.Checkbutton(top)
        self.TimeSaving.place(x=510, y=140, height=31)
        self.TimeSaving.configure(background="#d9d9d9")
        self.TimeSaving.configure(text='''每步用时''')
        self.TimeSaving.configure(variable=gameinfo_support.STime)

        self.NodeSaving = tk.Checkbutton(top)
        self.NodeSaving.place(x=510, y=180, height=31)
        self.NodeSaving.configure(background="#d9d9d9")
        self.NodeSaving.configure(text='''搜索局面数''')
        self.NodeSaving.configure(variable=gameinfo_support.SNodes)

        self.NpsSaving = tk.Checkbutton(top)
        self.NpsSaving.place(x=510, y=220, height=31)
        self.NpsSaving.configure(background="#d9d9d9")
        self.NpsSaving.configure(text='''搜索速度''')
        self.NpsSaving.configure(variable=gameinfo_support.SNps)

        self.TbSaving = tk.Checkbutton(top)
        self.TbSaving.place(x=510, y=260, height=31)
        self.TbSaving.configure(background="#d9d9d9")
        self.TbSaving.configure(text='''残局库命中数''')
        self.TbSaving.configure(variable=gameinfo_support.STb)

        self.PVSaving = tk.Checkbutton(top)
        self.PVSaving.place(x=510, y=300, height=31)
        self.PVSaving.configure(background="#d9d9d9")
        self.PVSaving.configure(text='''预测棋步''')
        self.PVSaving.configure(variable=gameinfo_support.SPv)

        self.AllSave = tk.Button(top)
        self.AllSave.place(x=530, y=340, height=33, width=64)
        self.AllSave.configure(background="#d9d9d9")
        self.AllSave.configure(command=gameinfo_support.all_save)
        self.AllSave.configure(relief="sunken")
        self.AllSave.configure(text='''全选''')

        self.AllReverse = tk.Button(top)
        self.AllReverse.place(x=530, y=380, height=33, width=64)
        self.AllReverse.configure(background="#d9d9d9")
        self.AllReverse.configure(command=gameinfo_support.all_reverse)
        self.AllReverse.configure(text='''反选''')

        self.Confirm = tk.Button(top)
        self.Confirm.place(x=110, y=430, height=33, width=72)
        self.Confirm.configure(background="#d9d9d9")
        self.Confirm.configure(command=gameinfo_support.confirm)
        self.Confirm.configure(text='''确定''')

        self.Clear = tk.Button(top)
        self.Clear.place(x=220, y=430, height=33, width=72)
        self.Clear.configure(background="#d9d9d9")
        self.Clear.configure(command=gameinfo_support.clear)
        self.Clear.configure(text='''默认''')

        self.Clear = tk.Button(top)
        self.Clear.place(x=330, y=430, height=33, width=72)
        self.Clear.configure(background="#d9d9d9")
        self.Clear.configure(command=gameinfo_support.sync)
        self.Clear.configure(text='''同步''')

        self.Cancel = tk.Button(top)
        self.Cancel.place(x=440, y=430, height=33, width=72)
        self.Cancel.configure(background="#d9d9d9")
        self.Cancel.configure(command=gameinfo_support.cancel)
        self.Cancel.configure(text='''取消''')

        self.Result = None


if __name__ == '__main__':
    print("test mode")
    vp_start_gui()
